plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'org.jetbrains.kotlin.kapt'
    id 'dagger.hilt.android.plugin'
    // Used by Firebase
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "org.northwinds.app.sotachaser"
        minSdk 21
        targetSdk 32
        versionCode 11
        versionName "0.8.1 Alpha"

        testInstrumentationRunner "org.northwinds.app.sotachaser.SotaChaserTestRunner"
        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //javaCompileOptions {
        //    annotationProcessorOptions {
        //        arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
        //    }
        //}
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
                arg("room.incremental", "true")
                arg("room.expandProjection", "true")
            }
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'org.northwinds.app.sotachaser'

    // For some Roboelectric tests that load raw resources
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
	String sharedTestDir = 'src/sharedTest/'
	String sharedTestSourceDir = sharedTestDir + 'java'
	String sharedTestResourceDir = sharedTestDir + 'resources'
        androidTest {
	    java.srcDirs += sharedTestSourceDir
	    resources.srcDirs += sharedTestResourceDir
        }
        test {
	    java.srcDirs += sharedTestSourceDir
	    resources.srcDirs += sharedTestResourceDir
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // CSV parser
    implementation 'com.univocity:univocity-parsers:2.9.1'
    implementation 'me.champeau.openbeans:openbeans:1.0.2'

    implementation 'androidx.activity:activity-ktx:1.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.0'

    testImplementation 'org.hamcrest:hamcrest-library:2.2'

    def roomVersion = "2.4.2"

    implementation("androidx.room:room-runtime:$roomVersion")
    //annotationProcessor("androidx.room:room-compiler:$roomVersion")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$roomVersion")
    // To use Kotlin Symbolic Processing (KSP)
    //ksp("androidx.room:room-compiler:$roomVersion")

    // optional - Kotlin Extensions and Coroutines support for Room
    //implementation("androidx.room:room-ktx:$roomVersion")

    // optional - RxJava2 support for Room
    //implementation("androidx.room:room-rxjava2:$roomVersion")

    // optional - RxJava3 support for Room
    //implementation("androidx.room:room-rxjava3:$roomVersion")

    // optional - Guava support for Room, including Optional and ListenableFuture
    //implementation("androidx.room:room-guava:$roomVersion")

    // optional - Test helpers
    //testImplementation("androidx.room:room-testing:$roomVersion")

    // optional - Paging 3 Integration
    //implementation("androidx.room:room-paging:2.5.0-alpha01")

    //testImplementation 'junit:junit:4.13.2'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    // Local unit testing with Android classes
    testImplementation 'org.robolectric:robolectric:4.8'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    // Use for RecyclerViewActions
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'

    implementation 'com.google.dagger:hilt-android:2.43'
    kapt 'com.google.dagger:hilt-compiler:2.43'

    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.43'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.43'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.43'
    kaptTest 'com.google.dagger:hilt-compiler:2.43'

    // For testing Google Maps interface
    // Requires API 18
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    // For IdlingThreadPoolExecutor
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.4.0'

    // Import the BoM for the Firebase platform
    // Requires API 19
    implementation platform('com.google.firebase:firebase-bom:30.0.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //def preference_version = "1.2.0"
    //implementation "androidx.preference:preference-ktx:$preference_version"
    implementation "androidx.preference:preference-ktx:1.2.0"

    // Espresso Intent mocking
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.0'
    def fragment_version = "1.5.0"

    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    debugImplementation 'androidx.test:core:1.4.0'
    //debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    debugImplementation("androidx.fragment:fragment-testing:$fragment_version") {
        exclude group: 'androidx.test', module: 'core'
    }

    implementation 'com.google.android.gms:play-services-location:20.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.1'
    androidTestImplementation 'com.github.gmazzo:okhttp-mock:1.5.0'
    testImplementation 'com.github.gmazzo:okhttp-mock:1.5.0'

    //implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    // moshi for parsing the JSON format
    def moshi_version = "1.13.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // For InstantTaskExecutorRule
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
}

// Added for supporting Hilt with Kapt
kapt {
    correctErrorTypes true
}

hilt {
    enableAggregatingTask = true
}
